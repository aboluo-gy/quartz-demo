#logging:
#  config: classpath:log4j.properties
server:
  port: 8080
spring:
  application:
    name: quartz-demo
  datasource:
    druid:
      initial-size: 1  # 初始化大小
      min-idle: 1  # 最小
      max-active: 3  # 最大
      max-wait: 60000  # 配置获取连接等待超时的时间
      time-between-eviction-runs-millis: 60000  # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
      min-evictable-idle-time-millis: 300000  # 指定一个空闲连接最少空闲多久后可被清除，单位是毫秒
      validationQuery: select 'x'
      test-while-idle: true  # 当连接空闲时，是否执行连接测试
      test-on-borrow: false  # 当从连接池借用连接时，是否测试该连接
      test-on-return: false  # 在连接归还到连接池时是否测试该连接
      filters: config,wall,stat  # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
      poolPreparedStatements: true # 打开PSCache，并且指定每个连接上PSCache的大小
      MaxPoolPreparedStatementPerConnectionSize: 20
      maxOpenPreparedStatements: 50
      # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
      connectionProperties: druid.stat.slowSqlMillis=500;druid.stat.logSlowSql=true;config.decrypt=false
      # 合并多个DruidDataSource的监控数据
      #use-global-data-source-stat: true
      #WebStatFilter配置，说明请参考Druid Wiki，配置_配置WebStatFilter
      web-stat-filter:
        enabled: true #是否启用StatFilter默认值true
        url-pattern: /*
        exclusions: /druid/*,*.js,*.gif,*.jpg,*.bmp,*.png,*.css,*.ico
        session-stat-enable: true
        session-stat-max-count: 10
      #StatViewServlet配置，说明请参考Druid Wiki，配置_StatViewServlet配置
      stat-view-servlet:
        enabled: true #是否启用StatViewServlet默认值true
        url-pattern: /druid/*
        reset-enable: true
        login-username: admin
        login-password: admin
    url: jdbc:mysql://localhost:3306/quartz?useUnicode=true&characterEncoding=utf-8&useSSL=false&serverTimezone=Asia/Shanghai&autoReconnect=true&failOverReadOnly=false
    driver-class-name: com.mysql.jdbc.Driver  # mysql8.0以前使用com.mysql.jdbc.Driver
    username: root
    password: 123456
    #通过这句配置将druid连接池引入到我们的配置中，spring会尽可能判断类型是什么，然后根据情况去匹配驱动类。
    type: com.alibaba.druid.pool.DruidDataSource
  quartz:
    #    properties:
    #      org:
    #        quartz:
    #          dataSource:
    #            qzDS:
    #              URL: ${spring.datasource.url}
    ##              acquireIncrement: 1
    #              driver: ${spring.datasource.driver-class-name}
    #              maxConnections: 10
    #              password: ${spring.datasource.password}
    #              user: ${spring.datasource.username}
    #              validationQuery: select 0
    #              connectionProvider:
    #                class: com.persagy.config.DruidConnectionProvider
    #          jobStore:
    #            class: org.quartz.impl.jdbcjobstore.JobStoreTX
    #            clusterCheckinInterval: 10000
    #            dataSource: qzDS
    #            driverDelegateClass: org.quartz.impl.jdbcjobstore.StdJDBCDelegate
    #            isClustered: false
    #            misfireThreshold: 6000
    #            tablePrefix: QRTZ_
    #            useProperties: false
    #          scheduler:
    #            instanceId: AUTO
    #            instanceName: quartzScheduler
    #            job-factory:
    #              class: org.quartz.simpl.SimpleJobFactory
    #            rmi:
    #              export: false
    #              proxy: false
    #            skip-update-check: true
    #            wrapJobExecutionInUserTransaction: false
    #          threadPool:
    #            class: org.quartz.simpl.SimpleThreadPool
    #            threadCount: 10
    #            threadPriority: 5
    #            threadsInheritContextClassLoaderOfInitializingThread: true #配置是否启动自动加载数据库内的定时任务，默认true
    job-store-type: jdbc
    jdbc:
      initialize-schema: never  # always never
      comment-prefix: '#'